# -*- coding: utf-8 -*-
"""Multiple Linear Regression - 2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nlDwINxmgwC-uM2DD-qgXcCeC-L431WA
"""

# import numpy as np

# # Data
# x = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
# y = np.array([1, 3, 2, 5, 7, 8, 8, 9, 10, 12])

# # Add a column of ones to include the intercept in the calculation
# X = np.vstack([np.ones(len(x)), x]).T

# # Calculate the coefficients (theta) using the formula: theta = (X^T * X)^(-1) * X^T * y
# theta = np.linalg.inv(X.T @ X) @ X.T @ y

# # Predicted values
# y_pred = X @ theta

# # Calculate the Sum of Squared Errors (SSE)
# SSE = np.sum((y - y_pred) ** 2)

# # Calculate the R² value
# SS_total = np.sum((y - np.mean(y)) ** 2)
# R2 = 1 - SSE / SS_total

# # Calculate RMSE
# RMSE = np.sqrt(SSE / len(y))

# # Print the results
# print(f"Coefficients: {theta}")
# print(f"SSE: {SSE}")
# print(f"R²: {R2}")
# print(f"RMSE: {RMSE}")

# Importing the libraries
import numpy as np

# Importing the dataset
x = np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
y = np.array([1, 3, 2, 5, 7, 8, 8, 9, 10, 12])

# Reshaping the dataset for compatibility with the Linear Regression model
X = x.reshape(-1, 1)

# # Splitting the dataset into the Training set and Test set
# from sklearn.model_selection import train_test_split
# X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=1, random_state=0)


#  Splitting the dataset into the Training set and Test set (50% for test set)
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=0)

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train, y_train)

y_pred = regressor.predict(X_test)

np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test), 1)), axis = 1)

y_pred = regressor.predict(X_test)

from sklearn.metrics import r2_score, mean_squared_error

R2 = r2_score(y_test, y_pred)

RMSE = np.sqrt(mean_squared_error(y_test, y_pred))

print(f"Coefficients: {regressor.coef_}, Intercept: {regressor.intercept_}")
print(f"R²: {R2}")
print(f"RMSE: {RMSE}")

np.set_printoptions(precision=2)
print(np.concatenate((y_pred.reshape(len(y_pred), 1), y_test.reshape(len(y_test), 1)), 1))

import matplotlib.pyplot as plt

plt.scatter(X_train, y_train, color='blue', label='Training data')

plt.scatter(X_test, y_test, color='red', label='Test data')

plt.plot(X_train, regressor.predict(X_train), color='green', label='Regression line')

plt.title('Multiple Linear Regression')
plt.xlabel('X')
plt.ylabel('y')
plt.legend()
plt.show()